devServiceIp: localhost

server:
  port: 60000

spring:
  application:
    name: blog-gateway
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${devServiceIp}:3306/blog_gateway?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&serverTimezone=GMT%2B8
    username: root
    password: root
  redis:
    database: 0
    host: ${devServiceIp}
    port: 6379
    password: redis-960
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  cloud:
    gateway:
      globalcors:
        # gateway 跨域设置
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowCredentials: true
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true
      routes:
        # 配置路由规则
        - id: auth #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          uri: lb://auth #匹配后提供服务的路由地址
          predicates:
            - Path=/auth/**         # 断言，路径相匹配的进行路由

        - id: content
          uri: lb://content
          predicates:
            - Path=/content/**

        - id: file
          uri: lb://file
          predicates:
            - Path=/file/**

rocketmq:
  name-server: ${devServiceIp}:9876 # 访问地址
  producer:
    group: blog # 必须指定group
    send-message-timeout: 3000 # 消息发送超时时长，默认3s
    retry-times-when-send-failed: 3 # 同步发送消息失败重试次数，默认2
    retry-times-when-send-async-failed: 3 # 异步发送消息失败重试次数，默认2

mybatis:
  mapper-locations: classpath:/mapper/*.xml

security:
  oauth2:
    resource:
      id: gateway
      user-info-uri: http://${devServiceIp}:9200/auth/user-me
      prefer-token-info: false